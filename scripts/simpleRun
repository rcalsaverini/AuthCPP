#!/usr/bin/python

import os
from time import time
from numpy import arange, sqrt, mean
from numpy.random import uniform
import re

showList = lambda x : "    ".join(map(str,x))

def doCalculation(alpha, q, beta, size, steps, burn, annealing, lone):
    cmd  = "./authcpp " + " ".join(map(str,[size, steps, burn, annealing, beta, alpha, q, lone]))
    foo = os.popen(cmd)
    output = "".join([line[0:-1] for line in foo])
    res = output.split()
    return map(float,res)


def cabecalho(q, beta, size, steps, burn, annealing):
    print "# cut: order parameters versus u = 2 alpha/ N(N-1)"
    print "# size: " , size
    print "# beta: " , beta
    print "# q: "    , q
    print "# steps: ", steps
    print "# burn: " , burn
    print "# anneal: ", annealing
    
if __name__ == "__main__":
    size = 10
    steps = 15000
    burn = 1500
    annealing = 1500
    beta = 7
    q = 0.1
    u = 0.15
    cabecalho(q, beta, size, steps, burn, annealing)
    while u < 2.0:
        u += 0.1
        alpha = size * (size - 1.0)/2.0 * u
        t = time()
        foo = doCalculation(alpha, q, beta, size, steps, burn, annealing, 0)
        print u, foo[0], foo[1], foo[2], time() - t
        #print u,  showList(foo), time() - t
        
        



